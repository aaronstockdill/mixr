<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://www.netbeans.org/ns/project/1">
    <type>org.netbeans.modules.apisupport.project</type>
    <configuration>
        <data xmlns="http://www.netbeans.org/ns/nb-module-project/3">
            <code-name-base>diabelli.isabelle</code-name-base>
            <suite-component/>
            <module-dependencies>
                <dependency>
                    <code-name-base>diabelli</code-name-base>
                    <build-prerequisite/>
                    <compile-dependency/>
                    <run-dependency>
                        <specification-version>1.0</specification-version>
                    </run-dependency>
                </dependency>
                <dependency>
                    <code-name-base>org.isabelle.iapp</code-name-base>
                    <build-prerequisite/>
                    <compile-dependency/>
                    <run-dependency>
                        <release-version>1</release-version>
                        <specification-version>1.0</specification-version>
                    </run-dependency>
                </dependency>
                <dependency>
                    <code-name-base>org.isabelle.theoryeditor</code-name-base>
                    <build-prerequisite/>
                    <compile-dependency/>
                    <run-dependency>
                        <specification-version>1.0</specification-version>
                    </run-dependency>
                </dependency>
                <dependency>
                    <code-name-base>org.openide.text</code-name-base>
                    <build-prerequisite/>
                    <compile-dependency/>
                    <run-dependency>
                        <specification-version>6.43.2</specification-version>
                    </run-dependency>
                </dependency>
                <dependency>
                    <code-name-base>org.openide.util</code-name-base>
                    <build-prerequisite/>
                    <compile-dependency/>
                    <run-dependency>
                        <specification-version>8.19.1</specification-version>
                    </run-dependency>
                </dependency>
                <dependency>
                    <code-name-base>org.openide.util.lookup</code-name-base>
                    <build-prerequisite/>
                    <compile-dependency/>
                    <run-dependency>
                        <specification-version>8.11.1</specification-version>
                    </run-dependency>
                </dependency>
                <dependency>
                    <code-name-base>org.openide.windows</code-name-base>
                    <build-prerequisite/>
                    <compile-dependency/>
                    <run-dependency>
                        <specification-version>6.48.2</specification-version>
                    </run-dependency>
                </dependency>
            </module-dependencies>
            <test-dependencies>
                <test-type>
                    <name>unit</name>
                    <test-dependency>
                        <code-name-base>org.netbeans.libs.junit4</code-name-base>
                        <compile-dependency/>
                    </test-dependency>
                </test-type>
            </test-dependencies>
            <public-packages>
                <package>diabelli.isabelle.pure.lib</package>
                <package>diabelli.isabelle.terms</package>
                <package>isabelle</package>
                <package>scala</package>
                <package>scala.actors</package>
                <package>scala.actors.remote</package>
                <package>scala.actors.scheduler</package>
                <package>scala.actors.threadpool</package>
                <package>scala.actors.threadpool.helpers</package>
                <package>scala.actors.threadpool.locks</package>
                <package>scala.annotation</package>
                <package>scala.annotation.target</package>
                <package>scala.annotation.unchecked</package>
                <package>scala.collection</package>
                <package>scala.collection.generic</package>
                <package>scala.collection.immutable</package>
                <package>scala.collection.interfaces</package>
                <package>scala.collection.mutable</package>
                <package>scala.collection.script</package>
                <package>scala.compat</package>
                <package>scala.concurrent</package>
                <package>scala.concurrent.forkjoin</package>
                <package>scala.io</package>
                <package>scala.math</package>
                <package>scala.mobile</package>
                <package>scala.ref</package>
                <package>scala.reflect</package>
                <package>scala.reflect.generic</package>
                <package>scala.runtime</package>
                <package>scala.swing</package>
                <package>scala.swing.event</package>
                <package>scala.swing.model</package>
                <package>scala.swing.test</package>
                <package>scala.testing</package>
                <package>scala.text</package>
                <package>scala.util</package>
                <package>scala.util.automata</package>
                <package>scala.util.continuations</package>
                <package>scala.util.control</package>
                <package>scala.util.grammar</package>
                <package>scala.util.logging</package>
                <package>scala.util.matching</package>
                <package>scala.util.parsing.ast</package>
                <package>scala.util.parsing.combinator</package>
                <package>scala.util.parsing.combinator.lexical</package>
                <package>scala.util.parsing.combinator.syntactical</package>
                <package>scala.util.parsing.combinator.testing</package>
                <package>scala.util.parsing.combinator.token</package>
                <package>scala.util.parsing.input</package>
                <package>scala.util.parsing.json</package>
                <package>scala.util.parsing.syntax</package>
                <package>scala.util.regexp</package>
                <package>scala.xml</package>
                <package>scala.xml.dtd</package>
                <package>scala.xml.factory</package>
                <package>scala.xml.include</package>
                <package>scala.xml.include.sax</package>
                <package>scala.xml.parsing</package>
                <package>scala.xml.persistent</package>
                <package>scala.xml.pull</package>
                <package>scala.xml.transform</package>
            </public-packages>
            <class-path-extension>
                <runtime-relative-path>ext/DiabellliIsabelleScalaWrapper.jar</runtime-relative-path>
                <binary-origin>release/modules/ext/DiabellliIsabelleScalaWrapper.jar</binary-origin>
            </class-path-extension>
            <class-path-extension>
                <runtime-relative-path>ext/Pure.jar</runtime-relative-path>
                <binary-origin>release/modules/ext/Pure.jar</binary-origin>
            </class-path-extension>
            <class-path-extension>
                <runtime-relative-path>ext/scala-library.jar</runtime-relative-path>
                <binary-origin>release/modules/ext/scala-library.jar</binary-origin>
            </class-path-extension>
            <class-path-extension>
                <runtime-relative-path>ext/scala-swing.jar</runtime-relative-path>
                <binary-origin>release/modules/ext/scala-swing.jar</binary-origin>
            </class-path-extension>
        </data>
    </configuration>
</project>
